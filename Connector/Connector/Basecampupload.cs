// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: basecampupload.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Connector.Protobuf {

  /// <summary>Holder for reflection information generated from basecampupload.proto</summary>
  public static partial class BasecampuploadReflection {

    #region Descriptor
    /// <summary>File descriptor for basecampupload.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BasecampuploadReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRiYXNlY2FtcHVwbG9hZC5wcm90bxIIdHV0b3JpYWwi5AIKDkJhc2VjYW1w",
            "VXBsb2FkEjUKB21lc3NhZ2UYASADKAsyJC50dXRvcmlhbC5CYXNlY2FtcFVw",
            "bG9hZC5NZXNzYWdlRGF0YRI3CgpnaXRodWJEYXRhGAIgAygLMiMudHV0b3Jp",
            "YWwuQmFzZWNhbXBVcGxvYWQuR2l0aHViRGF0YRI7CgxiYXNlY2FtcERhdGEY",
            "AyADKAsyJS50dXRvcmlhbC5CYXNlY2FtcFVwbG9hZC5CYXNlY2FtcERhdGEa",
            "GwoLTWVzc2FnZURhdGESDAoEdHlwZRgBIAEoCRouCgpHaXRodWJEYXRhEhAK",
            "CGZpbGVOYW1lGAEgASgJEg4KBnN0YXR1cxgCIAEoCRpYCgxCYXNlY2FtcERh",
            "dGESCgoCaWQYASABKAkSEAoIZmlsZU5hbWUYAiABKAkSEAoIYnVja2V0SWQY",
            "AyABKAkSGAoQYXBwX2Rvd25sb2FkX3VybBgEIAEoCUIVqgISQ29ubmVjdG9y",
            "LlByb3RvYnVmYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Connector.Protobuf.BasecampUpload), global::Connector.Protobuf.BasecampUpload.Parser, new[]{ "Message", "GithubData", "BasecampData" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Connector.Protobuf.BasecampUpload.Types.MessageData), global::Connector.Protobuf.BasecampUpload.Types.MessageData.Parser, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Connector.Protobuf.BasecampUpload.Types.GithubData), global::Connector.Protobuf.BasecampUpload.Types.GithubData.Parser, new[]{ "FileName", "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Connector.Protobuf.BasecampUpload.Types.BasecampData), global::Connector.Protobuf.BasecampUpload.Types.BasecampData.Parser, new[]{ "Id", "FileName", "BucketId", "AppDownloadUrl" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// [START messages]
  /// </summary>
  public sealed partial class BasecampUpload : pb::IMessage<BasecampUpload> {
    private static readonly pb::MessageParser<BasecampUpload> _parser = new pb::MessageParser<BasecampUpload>(() => new BasecampUpload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BasecampUpload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Connector.Protobuf.BasecampuploadReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BasecampUpload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BasecampUpload(BasecampUpload other) : this() {
      message_ = other.message_.Clone();
      githubData_ = other.githubData_.Clone();
      basecampData_ = other.basecampData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BasecampUpload Clone() {
      return new BasecampUpload(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Connector.Protobuf.BasecampUpload.Types.MessageData> _repeated_message_codec
        = pb::FieldCodec.ForMessage(10, global::Connector.Protobuf.BasecampUpload.Types.MessageData.Parser);
    private readonly pbc::RepeatedField<global::Connector.Protobuf.BasecampUpload.Types.MessageData> message_ = new pbc::RepeatedField<global::Connector.Protobuf.BasecampUpload.Types.MessageData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Connector.Protobuf.BasecampUpload.Types.MessageData> Message {
      get { return message_; }
    }

    /// <summary>Field number for the "githubData" field.</summary>
    public const int GithubDataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Connector.Protobuf.BasecampUpload.Types.GithubData> _repeated_githubData_codec
        = pb::FieldCodec.ForMessage(18, global::Connector.Protobuf.BasecampUpload.Types.GithubData.Parser);
    private readonly pbc::RepeatedField<global::Connector.Protobuf.BasecampUpload.Types.GithubData> githubData_ = new pbc::RepeatedField<global::Connector.Protobuf.BasecampUpload.Types.GithubData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Connector.Protobuf.BasecampUpload.Types.GithubData> GithubData {
      get { return githubData_; }
    }

    /// <summary>Field number for the "basecampData" field.</summary>
    public const int BasecampDataFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Connector.Protobuf.BasecampUpload.Types.BasecampData> _repeated_basecampData_codec
        = pb::FieldCodec.ForMessage(26, global::Connector.Protobuf.BasecampUpload.Types.BasecampData.Parser);
    private readonly pbc::RepeatedField<global::Connector.Protobuf.BasecampUpload.Types.BasecampData> basecampData_ = new pbc::RepeatedField<global::Connector.Protobuf.BasecampUpload.Types.BasecampData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Connector.Protobuf.BasecampUpload.Types.BasecampData> BasecampData {
      get { return basecampData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BasecampUpload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BasecampUpload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!message_.Equals(other.message_)) return false;
      if(!githubData_.Equals(other.githubData_)) return false;
      if(!basecampData_.Equals(other.basecampData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= message_.GetHashCode();
      hash ^= githubData_.GetHashCode();
      hash ^= basecampData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      message_.WriteTo(output, _repeated_message_codec);
      githubData_.WriteTo(output, _repeated_githubData_codec);
      basecampData_.WriteTo(output, _repeated_basecampData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += message_.CalculateSize(_repeated_message_codec);
      size += githubData_.CalculateSize(_repeated_githubData_codec);
      size += basecampData_.CalculateSize(_repeated_basecampData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BasecampUpload other) {
      if (other == null) {
        return;
      }
      message_.Add(other.message_);
      githubData_.Add(other.githubData_);
      basecampData_.Add(other.basecampData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            message_.AddEntriesFrom(input, _repeated_message_codec);
            break;
          }
          case 18: {
            githubData_.AddEntriesFrom(input, _repeated_githubData_codec);
            break;
          }
          case 26: {
            basecampData_.AddEntriesFrom(input, _repeated_basecampData_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the BasecampUpload message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class MessageData : pb::IMessage<MessageData> {
        private static readonly pb::MessageParser<MessageData> _parser = new pb::MessageParser<MessageData>(() => new MessageData());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Connector.Protobuf.BasecampUpload.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageData() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageData(MessageData other) : this() {
          type_ = other.type_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageData Clone() {
          return new MessageData(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private string type_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Type {
          get { return type_; }
          set {
            type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageData other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Type.Length != 0) hash ^= Type.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Type.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Type);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Type.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageData other) {
          if (other == null) {
            return;
          }
          if (other.Type.Length != 0) {
            Type = other.Type;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Type = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class GithubData : pb::IMessage<GithubData> {
        private static readonly pb::MessageParser<GithubData> _parser = new pb::MessageParser<GithubData>(() => new GithubData());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<GithubData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Connector.Protobuf.BasecampUpload.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GithubData() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GithubData(GithubData other) : this() {
          fileName_ = other.fileName_;
          status_ = other.status_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GithubData Clone() {
          return new GithubData(this);
        }

        /// <summary>Field number for the "fileName" field.</summary>
        public const int FileNameFieldNumber = 1;
        private string fileName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FileName {
          get { return fileName_; }
          set {
            fileName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "status" field.</summary>
        public const int StatusFieldNumber = 2;
        private string status_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Status {
          get { return status_; }
          set {
            status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as GithubData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(GithubData other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (FileName != other.FileName) return false;
          if (Status != other.Status) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (FileName.Length != 0) hash ^= FileName.GetHashCode();
          if (Status.Length != 0) hash ^= Status.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (FileName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(FileName);
          }
          if (Status.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Status);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (FileName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FileName);
          }
          if (Status.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(GithubData other) {
          if (other == null) {
            return;
          }
          if (other.FileName.Length != 0) {
            FileName = other.FileName;
          }
          if (other.Status.Length != 0) {
            Status = other.Status;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                FileName = input.ReadString();
                break;
              }
              case 18: {
                Status = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class BasecampData : pb::IMessage<BasecampData> {
        private static readonly pb::MessageParser<BasecampData> _parser = new pb::MessageParser<BasecampData>(() => new BasecampData());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<BasecampData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Connector.Protobuf.BasecampUpload.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BasecampData() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BasecampData(BasecampData other) : this() {
          id_ = other.id_;
          fileName_ = other.fileName_;
          bucketId_ = other.bucketId_;
          appDownloadUrl_ = other.appDownloadUrl_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BasecampData Clone() {
          return new BasecampData(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "fileName" field.</summary>
        public const int FileNameFieldNumber = 2;
        private string fileName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FileName {
          get { return fileName_; }
          set {
            fileName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "bucketId" field.</summary>
        public const int BucketIdFieldNumber = 3;
        private string bucketId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string BucketId {
          get { return bucketId_; }
          set {
            bucketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "app_download_url" field.</summary>
        public const int AppDownloadUrlFieldNumber = 4;
        private string appDownloadUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AppDownloadUrl {
          get { return appDownloadUrl_; }
          set {
            appDownloadUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as BasecampData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(BasecampData other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (FileName != other.FileName) return false;
          if (BucketId != other.BucketId) return false;
          if (AppDownloadUrl != other.AppDownloadUrl) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (FileName.Length != 0) hash ^= FileName.GetHashCode();
          if (BucketId.Length != 0) hash ^= BucketId.GetHashCode();
          if (AppDownloadUrl.Length != 0) hash ^= AppDownloadUrl.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (FileName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(FileName);
          }
          if (BucketId.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(BucketId);
          }
          if (AppDownloadUrl.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(AppDownloadUrl);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (FileName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FileName);
          }
          if (BucketId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(BucketId);
          }
          if (AppDownloadUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AppDownloadUrl);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(BasecampData other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.FileName.Length != 0) {
            FileName = other.FileName;
          }
          if (other.BucketId.Length != 0) {
            BucketId = other.BucketId;
          }
          if (other.AppDownloadUrl.Length != 0) {
            AppDownloadUrl = other.AppDownloadUrl;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                FileName = input.ReadString();
                break;
              }
              case 26: {
                BucketId = input.ReadString();
                break;
              }
              case 34: {
                AppDownloadUrl = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
