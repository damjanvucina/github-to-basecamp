// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: githubcommit.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace BasecampEndpoint.Protobuf {

  /// <summary>Holder for reflection information generated from githubcommit.proto</summary>
  public static partial class GithubcommitReflection {

    #region Descriptor
    /// <summary>File descriptor for githubcommit.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GithubcommitReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJnaXRodWJjb21taXQucHJvdG8SCHR1dG9yaWFsIvgDCgxHaXRodWJDb21t",
            "aXQSMwoHbWVzc2FnZRgBIAMoCzIiLnR1dG9yaWFsLkdpdGh1YkNvbW1pdC5N",
            "ZXNzYWdlRGF0YRIxCgZhdXRob3IYAiADKAsyIS50dXRvcmlhbC5HaXRodWJD",
            "b21taXQuQXV0aG9yRGF0YRIxCgZjb21taXQYAyADKAsyIS50dXRvcmlhbC5H",
            "aXRodWJDb21taXQuQ29tbWl0RGF0YRI5Cgp0b3RhbFN0YXRzGAQgAygLMiUu",
            "dHV0b3JpYWwuR2l0aHViQ29tbWl0LlRvdGFsU3RhdHNEYXRhGhsKC01lc3Nh",
            "Z2VEYXRhEgwKBHR5cGUYASABKAkaTQoKQXV0aG9yRGF0YRIMCgRuYW1lGAEg",
            "ASgJEg0KBWVtYWlsGAIgASgJEhEKCWF2YXRhclVybBgDIAEoCRIPCgdodG1s",
            "VXJsGAQgASgJGl8KCkNvbW1pdERhdGESCwoDc2hhGAEgASgJEgwKBGRhdGUY",
            "AiABKAkSDwoHbWVzc2FnZRgDIAEoCRIPCgdodG1sVXJsGAQgASgJEhQKDGNv",
            "bW1lbnRDb3VudBgFIAEoBRpFCg5Ub3RhbFN0YXRzRGF0YRINCgV0b3RhbBgB",
            "IAEoBRIRCglhZGRpdGlvbnMYAiABKAUSEQoJZGVsZXRpb25zGAMgASgFQhyq",
            "AhlCYXNlY2FtcEVuZHBvaW50LlByb3RvYnVmYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::BasecampEndpoint.Protobuf.GithubCommit), global::BasecampEndpoint.Protobuf.GithubCommit.Parser, new[]{ "Message", "Author", "Commit", "TotalStats" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::BasecampEndpoint.Protobuf.GithubCommit.Types.MessageData), global::BasecampEndpoint.Protobuf.GithubCommit.Types.MessageData.Parser, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BasecampEndpoint.Protobuf.GithubCommit.Types.AuthorData), global::BasecampEndpoint.Protobuf.GithubCommit.Types.AuthorData.Parser, new[]{ "Name", "Email", "AvatarUrl", "HtmlUrl" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BasecampEndpoint.Protobuf.GithubCommit.Types.CommitData), global::BasecampEndpoint.Protobuf.GithubCommit.Types.CommitData.Parser, new[]{ "Sha", "Date", "Message", "HtmlUrl", "CommentCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BasecampEndpoint.Protobuf.GithubCommit.Types.TotalStatsData), global::BasecampEndpoint.Protobuf.GithubCommit.Types.TotalStatsData.Parser, new[]{ "Total", "Additions", "Deletions" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// [START messages]
  /// </summary>
  public sealed partial class GithubCommit : pb::IMessage<GithubCommit> {
    private static readonly pb::MessageParser<GithubCommit> _parser = new pb::MessageParser<GithubCommit>(() => new GithubCommit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GithubCommit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BasecampEndpoint.Protobuf.GithubcommitReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GithubCommit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GithubCommit(GithubCommit other) : this() {
      message_ = other.message_.Clone();
      author_ = other.author_.Clone();
      commit_ = other.commit_.Clone();
      totalStats_ = other.totalStats_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GithubCommit Clone() {
      return new GithubCommit(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BasecampEndpoint.Protobuf.GithubCommit.Types.MessageData> _repeated_message_codec
        = pb::FieldCodec.ForMessage(10, global::BasecampEndpoint.Protobuf.GithubCommit.Types.MessageData.Parser);
    private readonly pbc::RepeatedField<global::BasecampEndpoint.Protobuf.GithubCommit.Types.MessageData> message_ = new pbc::RepeatedField<global::BasecampEndpoint.Protobuf.GithubCommit.Types.MessageData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BasecampEndpoint.Protobuf.GithubCommit.Types.MessageData> Message {
      get { return message_; }
    }

    /// <summary>Field number for the "author" field.</summary>
    public const int AuthorFieldNumber = 2;
    private static readonly pb::FieldCodec<global::BasecampEndpoint.Protobuf.GithubCommit.Types.AuthorData> _repeated_author_codec
        = pb::FieldCodec.ForMessage(18, global::BasecampEndpoint.Protobuf.GithubCommit.Types.AuthorData.Parser);
    private readonly pbc::RepeatedField<global::BasecampEndpoint.Protobuf.GithubCommit.Types.AuthorData> author_ = new pbc::RepeatedField<global::BasecampEndpoint.Protobuf.GithubCommit.Types.AuthorData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BasecampEndpoint.Protobuf.GithubCommit.Types.AuthorData> Author {
      get { return author_; }
    }

    /// <summary>Field number for the "commit" field.</summary>
    public const int CommitFieldNumber = 3;
    private static readonly pb::FieldCodec<global::BasecampEndpoint.Protobuf.GithubCommit.Types.CommitData> _repeated_commit_codec
        = pb::FieldCodec.ForMessage(26, global::BasecampEndpoint.Protobuf.GithubCommit.Types.CommitData.Parser);
    private readonly pbc::RepeatedField<global::BasecampEndpoint.Protobuf.GithubCommit.Types.CommitData> commit_ = new pbc::RepeatedField<global::BasecampEndpoint.Protobuf.GithubCommit.Types.CommitData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BasecampEndpoint.Protobuf.GithubCommit.Types.CommitData> Commit {
      get { return commit_; }
    }

    /// <summary>Field number for the "totalStats" field.</summary>
    public const int TotalStatsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::BasecampEndpoint.Protobuf.GithubCommit.Types.TotalStatsData> _repeated_totalStats_codec
        = pb::FieldCodec.ForMessage(34, global::BasecampEndpoint.Protobuf.GithubCommit.Types.TotalStatsData.Parser);
    private readonly pbc::RepeatedField<global::BasecampEndpoint.Protobuf.GithubCommit.Types.TotalStatsData> totalStats_ = new pbc::RepeatedField<global::BasecampEndpoint.Protobuf.GithubCommit.Types.TotalStatsData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BasecampEndpoint.Protobuf.GithubCommit.Types.TotalStatsData> TotalStats {
      get { return totalStats_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GithubCommit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GithubCommit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!message_.Equals(other.message_)) return false;
      if(!author_.Equals(other.author_)) return false;
      if(!commit_.Equals(other.commit_)) return false;
      if(!totalStats_.Equals(other.totalStats_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= message_.GetHashCode();
      hash ^= author_.GetHashCode();
      hash ^= commit_.GetHashCode();
      hash ^= totalStats_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      message_.WriteTo(output, _repeated_message_codec);
      author_.WriteTo(output, _repeated_author_codec);
      commit_.WriteTo(output, _repeated_commit_codec);
      totalStats_.WriteTo(output, _repeated_totalStats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += message_.CalculateSize(_repeated_message_codec);
      size += author_.CalculateSize(_repeated_author_codec);
      size += commit_.CalculateSize(_repeated_commit_codec);
      size += totalStats_.CalculateSize(_repeated_totalStats_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GithubCommit other) {
      if (other == null) {
        return;
      }
      message_.Add(other.message_);
      author_.Add(other.author_);
      commit_.Add(other.commit_);
      totalStats_.Add(other.totalStats_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            message_.AddEntriesFrom(input, _repeated_message_codec);
            break;
          }
          case 18: {
            author_.AddEntriesFrom(input, _repeated_author_codec);
            break;
          }
          case 26: {
            commit_.AddEntriesFrom(input, _repeated_commit_codec);
            break;
          }
          case 34: {
            totalStats_.AddEntriesFrom(input, _repeated_totalStats_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GithubCommit message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class MessageData : pb::IMessage<MessageData> {
        private static readonly pb::MessageParser<MessageData> _parser = new pb::MessageParser<MessageData>(() => new MessageData());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::BasecampEndpoint.Protobuf.GithubCommit.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageData() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageData(MessageData other) : this() {
          type_ = other.type_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageData Clone() {
          return new MessageData(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private string type_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Type {
          get { return type_; }
          set {
            type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageData other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Type.Length != 0) hash ^= Type.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Type.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Type);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Type.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageData other) {
          if (other == null) {
            return;
          }
          if (other.Type.Length != 0) {
            Type = other.Type;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Type = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class AuthorData : pb::IMessage<AuthorData> {
        private static readonly pb::MessageParser<AuthorData> _parser = new pb::MessageParser<AuthorData>(() => new AuthorData());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AuthorData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::BasecampEndpoint.Protobuf.GithubCommit.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AuthorData() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AuthorData(AuthorData other) : this() {
          name_ = other.name_;
          email_ = other.email_;
          avatarUrl_ = other.avatarUrl_;
          htmlUrl_ = other.htmlUrl_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AuthorData Clone() {
          return new AuthorData(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "email" field.</summary>
        public const int EmailFieldNumber = 2;
        private string email_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Email {
          get { return email_; }
          set {
            email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "avatarUrl" field.</summary>
        public const int AvatarUrlFieldNumber = 3;
        private string avatarUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AvatarUrl {
          get { return avatarUrl_; }
          set {
            avatarUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "htmlUrl" field.</summary>
        public const int HtmlUrlFieldNumber = 4;
        private string htmlUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string HtmlUrl {
          get { return htmlUrl_; }
          set {
            htmlUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AuthorData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AuthorData other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (Email != other.Email) return false;
          if (AvatarUrl != other.AvatarUrl) return false;
          if (HtmlUrl != other.HtmlUrl) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Email.Length != 0) hash ^= Email.GetHashCode();
          if (AvatarUrl.Length != 0) hash ^= AvatarUrl.GetHashCode();
          if (HtmlUrl.Length != 0) hash ^= HtmlUrl.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (Email.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Email);
          }
          if (AvatarUrl.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(AvatarUrl);
          }
          if (HtmlUrl.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(HtmlUrl);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Email.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
          }
          if (AvatarUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AvatarUrl);
          }
          if (HtmlUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(HtmlUrl);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AuthorData other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Email.Length != 0) {
            Email = other.Email;
          }
          if (other.AvatarUrl.Length != 0) {
            AvatarUrl = other.AvatarUrl;
          }
          if (other.HtmlUrl.Length != 0) {
            HtmlUrl = other.HtmlUrl;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                Email = input.ReadString();
                break;
              }
              case 26: {
                AvatarUrl = input.ReadString();
                break;
              }
              case 34: {
                HtmlUrl = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class CommitData : pb::IMessage<CommitData> {
        private static readonly pb::MessageParser<CommitData> _parser = new pb::MessageParser<CommitData>(() => new CommitData());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CommitData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::BasecampEndpoint.Protobuf.GithubCommit.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CommitData() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CommitData(CommitData other) : this() {
          sha_ = other.sha_;
          date_ = other.date_;
          message_ = other.message_;
          htmlUrl_ = other.htmlUrl_;
          commentCount_ = other.commentCount_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CommitData Clone() {
          return new CommitData(this);
        }

        /// <summary>Field number for the "sha" field.</summary>
        public const int ShaFieldNumber = 1;
        private string sha_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Sha {
          get { return sha_; }
          set {
            sha_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "date" field.</summary>
        public const int DateFieldNumber = 2;
        private string date_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Date {
          get { return date_; }
          set {
            date_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 3;
        private string message_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Message {
          get { return message_; }
          set {
            message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "htmlUrl" field.</summary>
        public const int HtmlUrlFieldNumber = 4;
        private string htmlUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string HtmlUrl {
          get { return htmlUrl_; }
          set {
            htmlUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "commentCount" field.</summary>
        public const int CommentCountFieldNumber = 5;
        private int commentCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CommentCount {
          get { return commentCount_; }
          set {
            commentCount_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CommitData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CommitData other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Sha != other.Sha) return false;
          if (Date != other.Date) return false;
          if (Message != other.Message) return false;
          if (HtmlUrl != other.HtmlUrl) return false;
          if (CommentCount != other.CommentCount) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Sha.Length != 0) hash ^= Sha.GetHashCode();
          if (Date.Length != 0) hash ^= Date.GetHashCode();
          if (Message.Length != 0) hash ^= Message.GetHashCode();
          if (HtmlUrl.Length != 0) hash ^= HtmlUrl.GetHashCode();
          if (CommentCount != 0) hash ^= CommentCount.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Sha.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Sha);
          }
          if (Date.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Date);
          }
          if (Message.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Message);
          }
          if (HtmlUrl.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(HtmlUrl);
          }
          if (CommentCount != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(CommentCount);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Sha.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Sha);
          }
          if (Date.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Date);
          }
          if (Message.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
          }
          if (HtmlUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(HtmlUrl);
          }
          if (CommentCount != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(CommentCount);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CommitData other) {
          if (other == null) {
            return;
          }
          if (other.Sha.Length != 0) {
            Sha = other.Sha;
          }
          if (other.Date.Length != 0) {
            Date = other.Date;
          }
          if (other.Message.Length != 0) {
            Message = other.Message;
          }
          if (other.HtmlUrl.Length != 0) {
            HtmlUrl = other.HtmlUrl;
          }
          if (other.CommentCount != 0) {
            CommentCount = other.CommentCount;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Sha = input.ReadString();
                break;
              }
              case 18: {
                Date = input.ReadString();
                break;
              }
              case 26: {
                Message = input.ReadString();
                break;
              }
              case 34: {
                HtmlUrl = input.ReadString();
                break;
              }
              case 40: {
                CommentCount = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class TotalStatsData : pb::IMessage<TotalStatsData> {
        private static readonly pb::MessageParser<TotalStatsData> _parser = new pb::MessageParser<TotalStatsData>(() => new TotalStatsData());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TotalStatsData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::BasecampEndpoint.Protobuf.GithubCommit.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TotalStatsData() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TotalStatsData(TotalStatsData other) : this() {
          total_ = other.total_;
          additions_ = other.additions_;
          deletions_ = other.deletions_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TotalStatsData Clone() {
          return new TotalStatsData(this);
        }

        /// <summary>Field number for the "total" field.</summary>
        public const int TotalFieldNumber = 1;
        private int total_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Total {
          get { return total_; }
          set {
            total_ = value;
          }
        }

        /// <summary>Field number for the "additions" field.</summary>
        public const int AdditionsFieldNumber = 2;
        private int additions_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Additions {
          get { return additions_; }
          set {
            additions_ = value;
          }
        }

        /// <summary>Field number for the "deletions" field.</summary>
        public const int DeletionsFieldNumber = 3;
        private int deletions_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Deletions {
          get { return deletions_; }
          set {
            deletions_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TotalStatsData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TotalStatsData other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Total != other.Total) return false;
          if (Additions != other.Additions) return false;
          if (Deletions != other.Deletions) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Total != 0) hash ^= Total.GetHashCode();
          if (Additions != 0) hash ^= Additions.GetHashCode();
          if (Deletions != 0) hash ^= Deletions.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Total != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Total);
          }
          if (Additions != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Additions);
          }
          if (Deletions != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Deletions);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Total != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
          }
          if (Additions != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Additions);
          }
          if (Deletions != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Deletions);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TotalStatsData other) {
          if (other == null) {
            return;
          }
          if (other.Total != 0) {
            Total = other.Total;
          }
          if (other.Additions != 0) {
            Additions = other.Additions;
          }
          if (other.Deletions != 0) {
            Deletions = other.Deletions;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Total = input.ReadInt32();
                break;
              }
              case 16: {
                Additions = input.ReadInt32();
                break;
              }
              case 24: {
                Deletions = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
