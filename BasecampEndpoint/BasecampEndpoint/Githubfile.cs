// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: githubfile.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace BasecampEndpoint.Protobuf {

  /// <summary>Holder for reflection information generated from githubfile.proto</summary>
  public static partial class GithubfileReflection {

    #region Descriptor
    /// <summary>File descriptor for githubfile.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GithubfileReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBnaXRodWJmaWxlLnByb3RvEgh0dXRvcmlhbCKRAwoKR2l0aHViRmlsZRIx",
            "CgdtZXNzYWdlGAEgAygLMiAudHV0b3JpYWwuR2l0aHViRmlsZS5NZXNzYWdl",
            "RGF0YRIvCgZjb21taXQYAiADKAsyHy50dXRvcmlhbC5HaXRodWJGaWxlLkNv",
            "bW1pdERhdGESKwoEZmlsZRgDIAMoCzIdLnR1dG9yaWFsLkdpdGh1YkZpbGUu",
            "RmlsZURhdGESLQoFc3RhdHMYBCADKAsyHi50dXRvcmlhbC5HaXRodWJGaWxl",
            "LlN0YXRzRGF0YRobCgtNZXNzYWdlRGF0YRIMCgR0eXBlGAEgASgJGhkKCkNv",
            "bW1pdERhdGESCwoDc2hhGAEgASgJGkkKCEZpbGVEYXRhEgsKA3NoYRgBIAEo",
            "CRIQCghmaWxlbmFtZRgCIAEoCRIOCgZzdGF0dXMYAyABKAkSDgoGcmF3VXJs",
            "GAQgASgJGkAKCVN0YXRzRGF0YRINCgV0b3RhbBgBIAEoBRIRCglhZGRpdGlv",
            "bnMYAiABKAUSEQoJZGVsZXRpb25zGAMgASgFQhyqAhlCYXNlY2FtcEVuZHBv",
            "aW50LlByb3RvYnVmYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::BasecampEndpoint.Protobuf.GithubFile), global::BasecampEndpoint.Protobuf.GithubFile.Parser, new[]{ "Message", "Commit", "File", "Stats" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::BasecampEndpoint.Protobuf.GithubFile.Types.MessageData), global::BasecampEndpoint.Protobuf.GithubFile.Types.MessageData.Parser, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BasecampEndpoint.Protobuf.GithubFile.Types.CommitData), global::BasecampEndpoint.Protobuf.GithubFile.Types.CommitData.Parser, new[]{ "Sha" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BasecampEndpoint.Protobuf.GithubFile.Types.FileData), global::BasecampEndpoint.Protobuf.GithubFile.Types.FileData.Parser, new[]{ "Sha", "Filename", "Status", "RawUrl" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BasecampEndpoint.Protobuf.GithubFile.Types.StatsData), global::BasecampEndpoint.Protobuf.GithubFile.Types.StatsData.Parser, new[]{ "Total", "Additions", "Deletions" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// [START messages]
  /// </summary>
  public sealed partial class GithubFile : pb::IMessage<GithubFile> {
    private static readonly pb::MessageParser<GithubFile> _parser = new pb::MessageParser<GithubFile>(() => new GithubFile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GithubFile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BasecampEndpoint.Protobuf.GithubfileReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GithubFile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GithubFile(GithubFile other) : this() {
      message_ = other.message_.Clone();
      commit_ = other.commit_.Clone();
      file_ = other.file_.Clone();
      stats_ = other.stats_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GithubFile Clone() {
      return new GithubFile(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BasecampEndpoint.Protobuf.GithubFile.Types.MessageData> _repeated_message_codec
        = pb::FieldCodec.ForMessage(10, global::BasecampEndpoint.Protobuf.GithubFile.Types.MessageData.Parser);
    private readonly pbc::RepeatedField<global::BasecampEndpoint.Protobuf.GithubFile.Types.MessageData> message_ = new pbc::RepeatedField<global::BasecampEndpoint.Protobuf.GithubFile.Types.MessageData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BasecampEndpoint.Protobuf.GithubFile.Types.MessageData> Message {
      get { return message_; }
    }

    /// <summary>Field number for the "commit" field.</summary>
    public const int CommitFieldNumber = 2;
    private static readonly pb::FieldCodec<global::BasecampEndpoint.Protobuf.GithubFile.Types.CommitData> _repeated_commit_codec
        = pb::FieldCodec.ForMessage(18, global::BasecampEndpoint.Protobuf.GithubFile.Types.CommitData.Parser);
    private readonly pbc::RepeatedField<global::BasecampEndpoint.Protobuf.GithubFile.Types.CommitData> commit_ = new pbc::RepeatedField<global::BasecampEndpoint.Protobuf.GithubFile.Types.CommitData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BasecampEndpoint.Protobuf.GithubFile.Types.CommitData> Commit {
      get { return commit_; }
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 3;
    private static readonly pb::FieldCodec<global::BasecampEndpoint.Protobuf.GithubFile.Types.FileData> _repeated_file_codec
        = pb::FieldCodec.ForMessage(26, global::BasecampEndpoint.Protobuf.GithubFile.Types.FileData.Parser);
    private readonly pbc::RepeatedField<global::BasecampEndpoint.Protobuf.GithubFile.Types.FileData> file_ = new pbc::RepeatedField<global::BasecampEndpoint.Protobuf.GithubFile.Types.FileData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BasecampEndpoint.Protobuf.GithubFile.Types.FileData> File {
      get { return file_; }
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::BasecampEndpoint.Protobuf.GithubFile.Types.StatsData> _repeated_stats_codec
        = pb::FieldCodec.ForMessage(34, global::BasecampEndpoint.Protobuf.GithubFile.Types.StatsData.Parser);
    private readonly pbc::RepeatedField<global::BasecampEndpoint.Protobuf.GithubFile.Types.StatsData> stats_ = new pbc::RepeatedField<global::BasecampEndpoint.Protobuf.GithubFile.Types.StatsData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BasecampEndpoint.Protobuf.GithubFile.Types.StatsData> Stats {
      get { return stats_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GithubFile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GithubFile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!message_.Equals(other.message_)) return false;
      if(!commit_.Equals(other.commit_)) return false;
      if(!file_.Equals(other.file_)) return false;
      if(!stats_.Equals(other.stats_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= message_.GetHashCode();
      hash ^= commit_.GetHashCode();
      hash ^= file_.GetHashCode();
      hash ^= stats_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      message_.WriteTo(output, _repeated_message_codec);
      commit_.WriteTo(output, _repeated_commit_codec);
      file_.WriteTo(output, _repeated_file_codec);
      stats_.WriteTo(output, _repeated_stats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += message_.CalculateSize(_repeated_message_codec);
      size += commit_.CalculateSize(_repeated_commit_codec);
      size += file_.CalculateSize(_repeated_file_codec);
      size += stats_.CalculateSize(_repeated_stats_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GithubFile other) {
      if (other == null) {
        return;
      }
      message_.Add(other.message_);
      commit_.Add(other.commit_);
      file_.Add(other.file_);
      stats_.Add(other.stats_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            message_.AddEntriesFrom(input, _repeated_message_codec);
            break;
          }
          case 18: {
            commit_.AddEntriesFrom(input, _repeated_commit_codec);
            break;
          }
          case 26: {
            file_.AddEntriesFrom(input, _repeated_file_codec);
            break;
          }
          case 34: {
            stats_.AddEntriesFrom(input, _repeated_stats_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GithubFile message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class MessageData : pb::IMessage<MessageData> {
        private static readonly pb::MessageParser<MessageData> _parser = new pb::MessageParser<MessageData>(() => new MessageData());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::BasecampEndpoint.Protobuf.GithubFile.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageData() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageData(MessageData other) : this() {
          type_ = other.type_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageData Clone() {
          return new MessageData(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private string type_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Type {
          get { return type_; }
          set {
            type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageData other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Type.Length != 0) hash ^= Type.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Type.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Type);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Type.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageData other) {
          if (other == null) {
            return;
          }
          if (other.Type.Length != 0) {
            Type = other.Type;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Type = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class CommitData : pb::IMessage<CommitData> {
        private static readonly pb::MessageParser<CommitData> _parser = new pb::MessageParser<CommitData>(() => new CommitData());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CommitData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::BasecampEndpoint.Protobuf.GithubFile.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CommitData() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CommitData(CommitData other) : this() {
          sha_ = other.sha_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CommitData Clone() {
          return new CommitData(this);
        }

        /// <summary>Field number for the "sha" field.</summary>
        public const int ShaFieldNumber = 1;
        private string sha_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Sha {
          get { return sha_; }
          set {
            sha_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CommitData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CommitData other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Sha != other.Sha) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Sha.Length != 0) hash ^= Sha.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Sha.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Sha);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Sha.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Sha);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CommitData other) {
          if (other == null) {
            return;
          }
          if (other.Sha.Length != 0) {
            Sha = other.Sha;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Sha = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class FileData : pb::IMessage<FileData> {
        private static readonly pb::MessageParser<FileData> _parser = new pb::MessageParser<FileData>(() => new FileData());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FileData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::BasecampEndpoint.Protobuf.GithubFile.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FileData() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FileData(FileData other) : this() {
          sha_ = other.sha_;
          filename_ = other.filename_;
          status_ = other.status_;
          rawUrl_ = other.rawUrl_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FileData Clone() {
          return new FileData(this);
        }

        /// <summary>Field number for the "sha" field.</summary>
        public const int ShaFieldNumber = 1;
        private string sha_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Sha {
          get { return sha_; }
          set {
            sha_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "filename" field.</summary>
        public const int FilenameFieldNumber = 2;
        private string filename_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Filename {
          get { return filename_; }
          set {
            filename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "status" field.</summary>
        public const int StatusFieldNumber = 3;
        private string status_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Status {
          get { return status_; }
          set {
            status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "rawUrl" field.</summary>
        public const int RawUrlFieldNumber = 4;
        private string rawUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RawUrl {
          get { return rawUrl_; }
          set {
            rawUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FileData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FileData other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Sha != other.Sha) return false;
          if (Filename != other.Filename) return false;
          if (Status != other.Status) return false;
          if (RawUrl != other.RawUrl) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Sha.Length != 0) hash ^= Sha.GetHashCode();
          if (Filename.Length != 0) hash ^= Filename.GetHashCode();
          if (Status.Length != 0) hash ^= Status.GetHashCode();
          if (RawUrl.Length != 0) hash ^= RawUrl.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Sha.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Sha);
          }
          if (Filename.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Filename);
          }
          if (Status.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Status);
          }
          if (RawUrl.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(RawUrl);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Sha.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Sha);
          }
          if (Filename.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Filename);
          }
          if (Status.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
          }
          if (RawUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RawUrl);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FileData other) {
          if (other == null) {
            return;
          }
          if (other.Sha.Length != 0) {
            Sha = other.Sha;
          }
          if (other.Filename.Length != 0) {
            Filename = other.Filename;
          }
          if (other.Status.Length != 0) {
            Status = other.Status;
          }
          if (other.RawUrl.Length != 0) {
            RawUrl = other.RawUrl;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Sha = input.ReadString();
                break;
              }
              case 18: {
                Filename = input.ReadString();
                break;
              }
              case 26: {
                Status = input.ReadString();
                break;
              }
              case 34: {
                RawUrl = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class StatsData : pb::IMessage<StatsData> {
        private static readonly pb::MessageParser<StatsData> _parser = new pb::MessageParser<StatsData>(() => new StatsData());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<StatsData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::BasecampEndpoint.Protobuf.GithubFile.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StatsData() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StatsData(StatsData other) : this() {
          total_ = other.total_;
          additions_ = other.additions_;
          deletions_ = other.deletions_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StatsData Clone() {
          return new StatsData(this);
        }

        /// <summary>Field number for the "total" field.</summary>
        public const int TotalFieldNumber = 1;
        private int total_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Total {
          get { return total_; }
          set {
            total_ = value;
          }
        }

        /// <summary>Field number for the "additions" field.</summary>
        public const int AdditionsFieldNumber = 2;
        private int additions_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Additions {
          get { return additions_; }
          set {
            additions_ = value;
          }
        }

        /// <summary>Field number for the "deletions" field.</summary>
        public const int DeletionsFieldNumber = 3;
        private int deletions_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Deletions {
          get { return deletions_; }
          set {
            deletions_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as StatsData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(StatsData other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Total != other.Total) return false;
          if (Additions != other.Additions) return false;
          if (Deletions != other.Deletions) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Total != 0) hash ^= Total.GetHashCode();
          if (Additions != 0) hash ^= Additions.GetHashCode();
          if (Deletions != 0) hash ^= Deletions.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Total != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Total);
          }
          if (Additions != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Additions);
          }
          if (Deletions != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Deletions);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Total != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
          }
          if (Additions != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Additions);
          }
          if (Deletions != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Deletions);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(StatsData other) {
          if (other == null) {
            return;
          }
          if (other.Total != 0) {
            Total = other.Total;
          }
          if (other.Additions != 0) {
            Additions = other.Additions;
          }
          if (other.Deletions != 0) {
            Deletions = other.Deletions;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Total = input.ReadInt32();
                break;
              }
              case 16: {
                Additions = input.ReadInt32();
                break;
              }
              case 24: {
                Deletions = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
